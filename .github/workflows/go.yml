name: Go
on: [push]
jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, macos-11, macos-12]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: "on"
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: "^1.18"
        id: go
      - name: Set up macOS
        if: startsWith(matrix.os, 'macos-')
        run: |
          brew install make
      - name: Set up Linux
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          set -x
          if [ ! -x /usr/bin/gmake ]; then
            sudo ln -snfv /usr/bin/make /usr/bin/gmake
          fi

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
      - name: Get tags to make version.go
        run: |
          git fetch origin +refs/tags/*:refs/tags/*
          d=30
          while ! gmake info ; do
            git fetch --deepen=$d origin +refs/tags/*:refs/tags/*
            d=$((d+10))
          done

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
      - name: Get tools
        run: |
          git diff --exit-code
          gmake install-tools
          go mod tidy
          git diff --exit-code

      - name: Build
        run: |
          gmake compile
          go mod tidy
          git diff --exit-code

      - name: Format check
        run: |
          gmake fmt
          git diff --exit-code

      - name: Lint
        run: gmake lint

      - name: Test with coverage
        # building the coverage output runs the tests
        run: gmake test-cover
      - name: Generate coverage report
        # even if tests fail, generate the report
        if: ${{ always() }}
        run: gmake coverage.html
      # upload to codecov as soon as we can to view reports
      - name: Upload coverage (codecov)
        if: ${{ always() }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.out
          fail_ci_if_error: true
      - name: Upload coverage (artifact)
        if: ${{ always() }}
        uses: actions/upload-artifact@v1.0.0
        with:
          name: coverage.html
          path: ./coverage.html

      - name: Test with race detector
        # combination of macos runners being slow and race detector messing with
        # timing makes this combination too flaky for now
        if: "!startsWith(matrix.os, 'macos-')"
        run: gmake test-go-race
